{
	"hostgraph": {
		"options": {
			"type": "directed"
		},
		"nodes": [
			{
				"key": "Start",
				"attributes": {
					"label": "Start",
					"type": "Event"
				}
			},
			{
				"key": "Ende",
				"attributes": {
					"label": "Ende",
					"type": "Event"
				}
			}
		],
		"edges": [
			{
				"key": "StartToEnde",
				"source": "Start",
				"target": "Ende",
				"attributes": {}
			}
		]
	},
	"rules": [
		{
			"key": "add_pattern",
			"options": {
				"homomorphic": false
			},
			"patternGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "A",
						"attributes": {}
					},
					{
						"key": "B",
						"attributes": {}
					}
				],
				"edges": [
					{
						"key": "aToB",
						"source": "A",
						"target": "B",
						"attributes": {}
					}
				]
			},
			"replacementGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "A",
						"attributes": {}
					},
					{
						"key": "Pattern",
						"attributes": {
							"label": {
								"type": "randexp",
								"args": {
									"pattern": "(AND-Rhombus|OR-Rhombus|XOR-Rhombus)",
									"options": {}
								}
							},
							"type": "pattern"
						}
					},
					{
						"key": "B",
						"attributes": {}
					}
				],
				"edges": [
					{
						"key": "AToPattern",
						"source": "A",
						"target": "Pattern",
						"attributes": {}
					},
					{
						"key": "PatternToB",
						"source": "Pattern",
						"target": "B",
						"attributes": {}
					}
				]
			}
		},
		{
			"key": "replace_pattern_with_gate_sequence",
			"options": {
				"homomorphic": false
			},
			"patternGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "A",
						"attributes": {}
					},
					{
						"key": "Pattern",
						"attributes": {
							"type": "pattern"
						}
					},
					{
						"key": "B",
						"attributes": {}
					}
				],
				"edges": [
					{
						"key": "AToPattern",
						"source": "A",
						"target": "Pattern",
						"attributes": {}
					},
					{
						"key": "PatternToB",
						"source": "Pattern",
						"target": "B",
						"attributes": {}
					}
				]
			},
			"replacementGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "A",
						"attributes": {}
					},
					{
						"key": "Sequence1",
						"attributes": {
							"type": "Sequence"
						}
					},
					{
						"key": "Gate1",
						"attributes": {
							"type": "Gate",
							"label": {
								"type": "jsonLogic",
								"args": {
									"rule": {
										"if": [
											{
												"==": [
													"$.nodes.[?(@.key === 'Pattern')].attributes.label",
													"AND-Rhombus"
												]
											},
											"AND",

											{
												"==": [
													"$.nodes.[?(@.key === 'Pattern')].attributes.label",
													"OR-Rhombus"
												]
											},
											"OR",

											{
												"==": [
													"$.nodes.[?(@.key === 'Pattern')].attributes.label",
													"XOR-Rhombus"
												]
											},
											"XOR",
											{ "var": "" }
										]
									}
								}
							}
						}
					},
					{
						"key": "Sequence2",
						"attributes": {
							"type": "Sequence"
						}
					},
					{
						"key": "Gate2",
						"attributes": {
							"type": "Gate",
							"label": {
								"type": "jsonLogic",
								"args": {
									"rule": {
										"if": [
											{
												"==": [
													"$.nodes.[?(@.key === 'Pattern')].attributes.label",
													"AND-Rhombus"
												]
											},
											"AND",

											{
												"==": [
													"$.nodes.[?(@.key === 'Pattern')].attributes.label",
													"OR-Rhombus"
												]
											},
											"OR",

											{
												"==": [
													"$.nodes.[?(@.key === 'Pattern')].attributes.label",
													"XOR-Rhombus"
												]
											},
											"XOR",
											{ "var": "" }
										]
									}
								}
							}
						}
					},
					{
						"key": "Sequence3",
						"attributes": {
							"type": "Sequence"
						}
					},
					{
						"key": "B",
						"attributes": {}
					}
				],
				"edges": [
					{
						"key": "AToSequence1",
						"source": "A",
						"target": "Sequence1",
						"attributes": {}
					},
					{
						"key": "Sequence1toGate1",
						"source": "Sequence1",
						"target": "Gate1",
						"attributes": {}
					},
					{
						"key": "Gate1ToSequence2",
						"source": "Gate1",
						"target": "Sequence2",
						"attributes": {}
					},
					{
						"key": "Sequence2ToGate2",
						"source": "Sequence2",
						"target": "Gate2",
						"attributes": {}
					},
					{
						"key": "Gate2ToSequence3",
						"source": "Gate2",
						"target": "Sequence3",
						"attributes": {}
					},
					{
						"key": "Sequence3ToB",
						"source": "Sequence3",
						"target": "B",
						"attributes": {}
					}
				]
			}
		},
		{
			"key": "add_branches_to_gates",
			"options": {
				"homomorphic": false
			},
			"patternGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "GateA",
						"attributes": {
							"type": "Gate"
						}
					},
					{
						"key": "Sequence",
						"attributes": {
							"type": "Sequence"
						}
					},
					{
						"key": "GateB",
						"attributes": {
							"type": "Gate"
						}
					}
				],
				"edges": [
					{
						"key": "GateAToSequence",
						"source": "GateA",
						"target": "Sequence",
						"attributes": {}
					},
					{
						"key": "SequenceToGateB",
						"source": "Sequence",
						"target": "GateB",
						"attributes": {}
					}
				]
			},
			"replacementGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "GateA",
						"attributes": {
							"type": "Gate"
						}
					},
					{
						"key": "Sequence",
						"attributes": {
							"type": "Sequence"
						}
					},
					{
						"key": "GateB",
						"attributes": {
							"type": "Gate"
						}
					},
					{
						"key": "Sequence2",
						"attributes": {
							"type": "Sequence"
						}
					}
				],
				"edges": [
					{
						"key": "GateAToSequence",
						"source": "GateA",
						"target": "Sequence",
						"attributes": {}
					},
					{
						"key": "SequenceToGateB",
						"source": "Sequence",
						"target": "GateB",
						"attributes": {}
					},
					{
						"key": "GateAToSequence2",
						"source": "GateA",
						"target": "Sequence2",
						"attributes": {}
					},
					{
						"key": "Sequence2ToGateB",
						"source": "Sequence2",
						"target": "GateB",
						"attributes": {}
					}
				]
			}
		},
		{
			"key": "replace_middle_sequences",
			"options": {
				"homomorphic": false
			},
			"patternGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "GateA",
						"attributes": {
							"type": "Gate"
						}
					},
					{
						"key": "Sequence",
						"attributes": {
							"type": "Sequence"
						}
					},
					{
						"key": "GateB",
						"attributes": {
							"type": "Gate"
						}
					}
				],
				"edges": [
					{
						"key": "GateAToSequence",
						"source": "GateA",
						"target": "Sequence",
						"attributes": {}
					},
					{
						"key": "SequenceToGateB",
						"source": "Sequence",
						"target": "GateB",
						"attributes": {}
					}
				]
			},
			"replacementGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "GateA",
						"attributes": {
							"type": "Gate"
						}
					},
					{
						"key": "Sequence",
						"attributes": {
							"type": "Event"
						}
					},
					{
						"key": "GateB",
						"attributes": {
							"type": "Gate"
						}
					}
				],
				"edges": [
					{
						"key": "GateAToSequence",
						"source": "GateA",
						"target": "Sequence",
						"attributes": {}
					},
					{
						"key": "SequenceToGateB",
						"source": "Sequence",
						"target": "GateB",
						"attributes": {}
					}
				]
			}
		},
		{
			"key": "expand_event",
			"options": {
				"homomorphic": false
			},
			"patternGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "Event",
						"attributes": {
							"type": "Event"
						}
					},
					{
						"key": "B",
						"attributes": {}
					}
				],
				"edges": [
					{
						"key": "eventToB",
						"source": "Event",
						"target": "B",
						"attributes": {}
					}
				],
				"nacs": [
					{
						"nodes": [
							{
								"key": "Event",
								"attributes": {
									"label": "Start"
								}
							}
						],
						"edges": []
					}
				]
			},
			"replacementGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "Event",
						"attributes": {
							"type": "Event"
						}
					},
					{
						"key": "Function",
						"attributes": {
							"type": "Function"
						}
					},
					{
						"key": "Event2",
						"attributes": {
							"type": "Event"
						}
					},
					{
						"key": "B",
						"attributes": {}
					}
				],
				"edges": [
					{
						"key": "EventToFunction",
						"source": "Event",
						"target": "Function",
						"attributes": {}
					},
					{
						"key": "FunctionToEvent2",
						"source": "Function",
						"target": "Event2",
						"attributes": {}
					},
					{
						"key": "Event2",
						"source": "Event2",
						"target": "B",
						"attributes": {}
					}
				]
			}
		},
		{
			"key": "replace_outer_sequences",
			"options": {
				"homomorphic": false
			},
			"patternGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "Before",
						"attributes": {
							"type": ["Event", "Gate"]
						}
					},
					{
						"key": "Function",
						"attributes": {
							"type": "Sequence"
						}
					},
					{
						"key": "After",
						"attributes": {
							"type": ["Event", "Gate"]
						}
					}
				],
				"edges": [
					{
						"key": "BeforeToFunction",
						"source": "Before",
						"target": "Function",
						"attributes": {}
					},
					{
						"key": "FunctionToAfter",
						"source": "Function",
						"target": "After",
						"attributes": {}
					}
				]
			},
			"replacementGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "Before"
					},
					{
						"key": "Function",
						"attributes": {
							"type": "Function",
							"label": {
								"type": "faker",
								"args": {
									"module": "company",
									"method": "buzzVerb"
								}
							}
						}
					},
					{
						"key": "After"
					}
				],
				"edges": [
					{
						"key": "BeforeToFunction",
						"source": "Before",
						"target": "Function",
						"attributes": {}
					},
					{
						"key": "FunctionToAfter",
						"source": "Function",
						"target": "After",
						"attributes": {}
					}
				]
			}
		},
		{
			"key": "expand_function",
			"options": {
				"homomorphic": false
			},
			"patternGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "Function",
						"attributes": {
							"type": "Function"
						}
					},
					{
						"key": "B",
						"attributes": {}
					}
				],
				"edges": [
					{
						"key": "FunctionToB",
						"source": "Function",
						"target": "B",
						"attributes": {}
					}
				]
			},
			"replacementGraph": {
				"options": {
					"type": "directed"
				},
				"nodes": [
					{
						"key": "Function",
						"attributes": {
							"type": "Function"
						}
					},
					{
						"key": "Event",
						"attributes": {
							"type": "Event"
						}
					},
					{
						"key": "Function2",
						"attributes": {
							"type": "Function",
							"label": {
								"type": "faker",
								"args": {
									"module": "word",
									"method": "verb"
								}
							}
						}
					},
					{
						"key": "B",
						"attributes": {}
					}
				],
				"edges": [
					{
						"key": "FunctionToEvent",
						"source": "Function",
						"target": "Event",
						"attributes": {}
					},
					{
						"key": "EventToFunction2",
						"source": "Event",
						"target": "Function2",
						"attributes": {}
					},
					{
						"key": "Function2",
						"source": "Function2",
						"target": "B",
						"attributes": {}
					}
				]
			}
		}
	],
	"sequence": [
		{
			"rule": "add_pattern",
			"options": {
				"mode": "all"
			}
		},
		{
			"rule": "replace_pattern_with_gate_sequence",
			"options": {
				"mode": "all"
			}
		},
		{
			"rule": "add_branches_to_gates",
			"options": {
				"mode": "all"
			}
		},
		{
			"rule": "add_branches_to_gates",
			"options": {
				"mode": "interval",
				"interval": {
					"min": 1,
					"max": 1
				},
				"repeat": [0, 4]
			}
		},
		{
			"rule": "replace_middle_sequences",
			"options": {
				"mode": "all"
			}
		},
		{
			"rule": "replace_outer_sequences",
			"options": {
				"mode": "all"
			}
		},
		{
			"rule": "expand_event",
			"options": {
				"mode": "interval",
				"interval": {
					"min": 0,
					"max": 1
				},
				"repeat": 1
			}
		},
		{
			"rule": "expand_function",
			"options": {
				"mode": "interval",
				"interval": {
					"min": 0,
					"max": 1
				},
				"repeat": 1
			}
		}
	],
	"returnHistory": true
}
